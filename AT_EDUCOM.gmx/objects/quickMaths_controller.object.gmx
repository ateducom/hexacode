<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation
randomize()
_x = irandom(15)
_y = irandom(15)
alarm[1] = room_speed
count = 4
//3*room_speed = 3 seconds
//irandom(x) will generate a random Integer from 0 to x
instance_create(0, room_height, quickMaths_tap)
allowed = 1
destroyed = 0
solved = 0
corrects = 0
wrongs = 0
alpha = 0

global.mode = "Math Game"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (solved)
    corrects++
else wrongs++
solved = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count--
if count &gt; 0
{
alarm[1] = room_speed
audio_play_sound(snd_tone, 1, 0)
}
else 
{
alarm[0] = 3*room_speed + (irandom(1)*(1+irandom(2)*room_speed)) - corrects/2*room_speed*0.2 + wrongs/2*room_speed*0.2
if (!audio_is_playing(snd_math))
audio_play_sound(snd_math, 1, 1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (corrects + wrongs &lt; 6)
{
wspeed = wrongs
cspeed = corrects
if wspeed &gt; 5
wspeed = 5
if cspeed &gt; 5
cspeed = 5
audio_play_sound(snd_success, 2, 0)
a = instance_create(0.2*room_width, 0, quickMaths_button)
a.ID = 0
a.lspeed = 10 + min(cspeed + wspeed, 10) - max(wspeed + cspeed, 5)
a.alarm[0] = room_speed*(0.1+random(1.4))
answers[0] = irandom(1)
if (answers[0] = 1)
{
a.answer = _x + _y
a.correct = 1
}
else
a.answer = _x + _y + irandom(10)
a = instance_create(0.5*room_width, 0, quickMaths_button)
a.ID = 1
a.lspeed = 10 + min(cspeed + wspeed, 10) - max(wspeed + cspeed, 5)
a.alarm[0] = room_speed*(0.1+random(1.4))
answers[1] = irandom(1)
if (answers[0] = 0 &amp;&amp; answers[1] = 1)
{
a.answer = _x + _y
a.correct = 1
}
else
a.answer = _x + _y -5 + irandom(10)
if a.answer = _x + _y
a.correct = 1
a = instance_create(0.8*room_width, 0, quickMaths_button)
a.ID = 2
a.lspeed = 10 + min(cspeed + wspeed, 10) - max(wspeed + cspeed, 5)
a.alarm[0] = room_speed*(0.1+random(1.4))
if (answers[0] = 0 &amp;&amp; answers[1] = 0)
{
a.answer = _x + _y
a.correct = 1
}
else a.answer = _x + _y -4 + irandom(4)
if a.answer = _x + _y
a.correct = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (destroyed &gt;= 3)
{
alarm[0] = (1+irandom(2)*room_speed)
_x = irandom(15)
_y = irandom(15)
destroyed = 0
allowed = 1
alarm[2] = room_speed*1.5
}


//if (corrects + wrongs &gt;= 7)
//show_message("Correct: " + string(corrects) + "
//Misses: " + string(wrongs))

if (alpha &gt;= 1)
{
global.corrects = corrects
global.wrongs = wrongs
room_goto(results)
}

///DEBUG
if keyboard_check_released(vk_backspace)
alpha = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(150, room_height-200, string(corrects + wrongs) + "/7")
draw_set_font(fnt0)
draw_set_color(make_color_rgb(141, 191, 178))
draw_roundrect_ext(room_width/8, 0, 7*room_width/8, 0.12*room_height,40,20, 0)
draw_set_color(c_white)
draw_set_halign(fa_center) //Set Horizontal Alignment
draw_set_valign(fa_center) //Set Vertical Alignment
if !count
draw_text(room_width/2, 0.06*room_height, string(_x) + " + " + string(_y) + " = ")
//draw_text(500,500, string(ctr))

draw_set_color(c_green)
if (alarm[2])
    if (solved)
    draw_text(room_width/2, room_height/2, "Correct!")
    else draw_text(room_width/2, room_height/2, "Missed :(")
draw_set_color(c_white)

draw_set_font(font_huge)
draw_set_halign(fa_right) //Set Horizontal Alignment
draw_set_valign(fa_bottom) //Set Vertical Alignment
if (count &lt; 4 &amp;&amp; count &gt; 0)
draw_text(room_width/2, room_height/2, string(count))

if (corrects + wrongs &gt;= 7)
{
draw_set_alpha(alpha)
draw_set_color(c_black)
draw_rectangle(0, 0, room_width, room_height, 0)
alpha += 1/(3*room_speed)
}
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
